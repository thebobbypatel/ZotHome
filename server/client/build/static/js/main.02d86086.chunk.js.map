{"version":3,"sources":["DataBox.js","App.js","index.js"],"names":["DataBox","title","data","className","App","useState","temp","setTemp","humidity","setHumidity","light","setLight","sound","setSound","setLightVal","setSetLightVal","setTempVal","setSetTempVal","tempControl","setTempControl","soundStatus","setSoundStatus","lightStatus","setLightStatus","tempTimeData","setTempTimeData","timeInterval","setTimeInterval","x","setX","y","setY","setTimeout","chartData","labels","datasets","label","fill","backgroundColor","borderColor","useEffect","console","log","axios","get","then","res","status","noise","lightbulb","xTemp","yTemp","forEach","push","d","Date","time","toLocaleString","timeZone","catch","err","size","placeholder","onChange","e","target","value","type","onClick","post","sendSetTemp","sendSetLight","options","responsive","display","text","tooltips","mode","intersect","hover","scales","xAxes","scaleLabel","labelString","yAxes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02d86086.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css'\n\nconst DataBox = ({title, data}) => {\n    return (\n        <div className={\"box\"}>\n            <p className={\"boxTitle\"}>{title}</p>\n            <p className={\"boxData\"}>{data}</p>\n        </div>\n    );\n}\n\nexport default DataBox;","import axios from 'axios';\nimport React, {useEffect, useState} from 'react';\nimport './index.css';\nimport 'antd/dist/antd.css';\n\nimport { Line } from 'react-chartjs-2';\n\nimport { Row, Col, Button, Input, Space} from 'antd';\nimport DataBox from './DataBox';\n\n\n\n\n\nfunction App() {\n\n    const [temp, setTemp] = useState(-1)\n    const [humidity, setHumidity] = useState(-1)\n    const [light, setLight] = useState(-1)\n    const [sound, setSound] = useState(-1)\n\n    const [setLightVal, setSetLightVal] = useState(4000)\n    const [setTempVal, setSetTempVal] = useState(72)\n\n    const [tempControl, setTempControl] = useState('?')\n    const [soundStatus, setSoundStatus] = useState('?')\n    const [lightStatus, setLightStatus] = useState('?')\n\n    const [tempTimeData, setTempTimeData] = useState([])\n\n    const [timeInterval, setTimeInterval] = useState(0)\n\n    const [x, setX] = useState([])\n    const [y, setY] = useState([])\n\n    const sendSetTemp = () => {\n        console.log(setTempVal)\n        console.log('sending setTemp')\n        const data = {\n            \"setTempVal\": setTempVal\n        }\n        axios.post('http://127.0.0.1:5000/setTemp', data).catch(err => console.log(err))\n    }\n\n    const sendSetLight = () => {\n        console.log(setLightVal)\n        console.log('sending setLight')\n        const data = {\n            \"setLightVal\": setLightVal\n        }\n        axios.post('http://127.0.0.1:5000/setLight', data).catch(err => console.log(err))\n    }\n\n    setTimeout(() => {\n        setTimeInterval(timeInterval + 1);\n    }, 5000);\n\n    const chartData = {\n        labels: y,\n        datasets: [\n            {\n                label: 'Temperature',\n                data: x,\n                fill: false,\n                backgroundColor: 'rgb(25, 99, 132)',\n                borderColor: 'rgba(25, 99, 132, 0.2)',\n            },\n        ],\n    };\n\n\n    useEffect(() => {\n        console.log(\"----------- \" + 'API Call ' + timeInterval + \" ------------\")\n        axios.get('http://127.0.0.1:5000/vitals')\n            .then(res => {\n                console.log('Get request status: ' + res.status)\n\n                setTemp(res.data.temp)\n                setHumidity(res.data.humidity)\n                setSound(res.data.sound)\n                setLight(res.data.light)\n\n                setTempControl(res.data.tempControl)\n                setSoundStatus(res.data.noise)\n                setLightStatus(res.data.lightbulb)\n\n                setTempTimeData(res.data?.tempTimeData)\n                let xTemp = []\n                let yTemp = []\n\n                tempTimeData.forEach((res) => {\n                    xTemp.push(res.temp);\n                    let d = new Date(res.time)\n                    yTemp.push(d.toLocaleString('en-US', { timeZone: 'PST' }));\n                })\n\n                setX(xTemp)\n                setY(yTemp)\n\n\n            })\n            .catch(err => {\n                console.log('Error: ' + err)\n            })\n\n    }, [timeInterval])\n\n    const chartOptions = {\n        responsive: true,\n        title: {\n            display: true,\n            text: 'Creating Real-Time Charts with Flask'\n        },\n        tooltips: {\n            mode: 'index',\n            intersect: false,\n        },\n        hover: {\n            mode: 'nearest',\n            intersect: true\n        },\n        scales: {\n            xAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Time'\n                }\n            }],\n            yAxes: [{\n                display: true,\n                scaleLabel: {\n                    display: true,\n                    labelString: 'Value'\n                }\n            }]\n        }\n    }\n\n  return (\n    <div className=\"App\">\n        <Row>\n            <p className={\"pageTitle\"}>ZotHome</p>\n        </Row>\n        <Row>\n            <h1>Current Data: (Temp Setting: {setTempVal} Light Setting: {setLightVal})</h1>\n        </Row>\n\n        <Row>\n            <Col>\n                <DataBox title={\"Temperature\"} data={temp}/>\n            </Col>\n            <Col>\n                <DataBox title={\"Humidity\"} data={humidity}/>\n            </Col>\n\n            <Col>\n                <DataBox title={\"Light\"} data={light}/>\n            </Col>\n            <Col>\n                <DataBox title={\"Sound\"} data={sound}/>\n            </Col>\n        </Row>\n\n        <Row>\n            <h1>Status:</h1>\n        </Row>\n        <Row>\n            <Col>\n                <DataBox title={\"AC/Heater\"} data={tempControl}/>\n            </Col>\n            <Col>\n                <DataBox title={\"Lightbulb\"} data={lightStatus}/>\n            </Col>\n            <Col>\n                <DataBox title={\"Noise\"} data={soundStatus}/>\n            </Col>\n        </Row>\n\n        <Row>\n            <h2>Set Temperature [Any] and Set Preferred Light Level [0 - 4095]:</h2>\n        </Row>\n\n        <Row>\n            <Space size={'large'}>\n                <Col>\n                    <Input placeholder=\"Set Temperature\" onChange={(e) => {setSetTempVal(e.target.value)}}/>\n                </Col>\n                <Col>\n                    <Button type=\"primary\" onClick={() => sendSetTemp()}>Set</Button>\n                </Col>\n                <Col>\n                    <Input placeholder=\"Set Light Level\" onChange={(e) => {setSetLightVal(e.target.value)}}/>\n                </Col>\n                <Col>\n                    <Button type=\"primary\" onClick={() => sendSetLight()}>Set</Button>\n                </Col>\n            </Space>\n        </Row>\n\n\n        <Row>\n            <h2>Temperature History:</h2>\n        </Row>\n\n        <Row>\n            <div className={'tempChart'}>\n                <Line data={chartData} options={chartOptions}/>\n            </div>\n        </Row>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}